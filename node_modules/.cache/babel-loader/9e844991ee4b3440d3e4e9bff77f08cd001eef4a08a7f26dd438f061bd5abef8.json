{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport { Modal } from 'bootstrap';\nimport FoodicsSecondaryBtn from '../buttons/FoodicsSecondaryBtn.vue';\nimport FoodicsTertiaryBtn from '../buttons/FoodicsTertiaryBtn.vue';\nexport default {\n  name: 'TimeSlotsField',\n  components: {\n    FoodicsSecondaryBtn,\n    FoodicsTertiaryBtn\n  },\n  props: {\n    label: {\n      type: String,\n      required: true\n    },\n    name: {\n      type: String,\n      required: true\n    },\n    value: {\n      type: Array,\n      required: true,\n      default: () => []\n    },\n    handleChange: {\n      type: Function,\n      required: true\n    }\n  },\n  data() {\n    return {\n      tempStartTime: '',\n      tempEndTime: '',\n      modal: null\n    };\n  },\n  computed: {\n    displayValue() {\n      if (!this.value.length) return '';\n      return this.value.map(period => this.formatPeriod(period)).join(', ');\n    }\n  },\n  mounted() {\n    this.modal = new Modal(document.getElementById('timeSelectModal'));\n  },\n  methods: {\n    openTimeSelector() {\n      this.tempStartTime = '';\n      this.tempEndTime = '';\n      this.modal.show();\n    },\n    formatPeriod(period) {\n      return `${period.start} - ${period.end}`;\n    },\n    removePeriod(index) {\n      const newValue = [...this.value];\n      newValue.splice(index, 1);\n      this.handleChange({\n        target: {\n          name: this.name,\n          value: newValue\n        }\n      });\n    },\n    addPeriod() {\n      if (this.tempStartTime && this.tempEndTime) {\n        const newPeriod = {\n          start: this.tempStartTime,\n          end: this.tempEndTime\n        };\n        const newValue = [...this.value, newPeriod];\n        this.handleChange({\n          target: {\n            name: this.name,\n            value: newValue\n          }\n        });\n        this.modal.hide();\n      }\n    }\n  }\n};","map":{"version":3,"names":["Modal","FoodicsSecondaryBtn","FoodicsTertiaryBtn","name","components","props","label","type","String","required","value","Array","default","handleChange","Function","data","tempStartTime","tempEndTime","modal","computed","displayValue","length","map","period","formatPeriod","join","mounted","document","getElementById","methods","openTimeSelector","show","start","end","removePeriod","index","newValue","splice","target","addPeriod","newPeriod","hide"],"sources":["src/View/components/ui/fields/TimeSlotsField.vue"],"sourcesContent":["<template>\n  <div class=\"form-group w-100\">\n    <label :for=\"name\" class=\"form-label\">{{ label }}</label>\n    \n    <div class=\"input-group\" @click=\"openTimeSelector\">\n      <input \n        type=\"text\"\n        class=\"form-control\" \n        :id=\"name\"\n        :name=\"name\"\n        :value=\"displayValue\"\n        readonly\n        placeholder=\"Click to select time slots\"\n      >\n      <span class=\"input-group-text\">\n        <i class=\"bi bi-clock\"></i>\n      </span>\n    </div>\n\n    <div class=\"mt-2\">\n      <div v-for=\"(period, index) in value\" :key=\"index\" class=\"badge bg-secondary me-2 mb-2\">\n        {{ formatPeriod(period) }}\n        <i class=\"bi bi-x-circle ms-1\" style=\"cursor: pointer\" @click=\"removePeriod(index)\"></i>\n      </div>\n    </div>\n\n    <!-- Bootstrap Modal for Time Selection -->\n    <div class=\"modal fade\" id=\"timeSelectModal\" tabindex=\"-1\">\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\">Select Time Period</h5>\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\n          </div>\n          <div class=\"modal-body\">\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <label>Start Time</label>\n                <input type=\"time\" class=\"form-control\" v-model=\"tempStartTime\">\n              </div>\n              <div class=\"col-6\">\n                <label>End Time</label>\n                <input type=\"time\" class=\"form-control\" v-model=\"tempEndTime\">\n              </div>\n            </div>\n          </div>\n          <div class=\"modal-footer row\">\n            <div class=\"col-6\">\n              <FoodicsTertiaryBtn data-bs-dismiss=\"modal\">{{ $t('close') }}</FoodicsTertiaryBtn>\n            </div>\n            <div class=\"col-6\">\n              <FoodicsSecondaryBtn :onClick=\"addPeriod\">{{ $t('add') }}</FoodicsSecondaryBtn>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Modal } from 'bootstrap'\nimport FoodicsSecondaryBtn from '../buttons/FoodicsSecondaryBtn.vue';\nimport FoodicsTertiaryBtn from '../buttons/FoodicsTertiaryBtn.vue';\n\nexport default {\n  name: 'TimeSlotsField',\n  components: {\n    FoodicsSecondaryBtn,\n    FoodicsTertiaryBtn\n  },\n  props: {\n    label: {\n      type: String,\n      required: true\n    },\n    name: {\n      type: String,\n      required: true\n    },\n    value: {\n      type: Array,\n      required: true,\n      default: () => []\n    },\n    handleChange: {\n      type: Function,\n      required: true\n    }\n  },\n  data() {\n    return {\n      tempStartTime: '',\n      tempEndTime: '',\n      modal: null\n    }\n  },\n  computed: {\n    displayValue() {\n      if (!this.value.length) return ''\n      return this.value.map(period => this.formatPeriod(period)).join(', ')\n    }\n  },\n  mounted() {\n    this.modal = new Modal(document.getElementById('timeSelectModal'))\n  },\n  methods: {\n    openTimeSelector() {\n      this.tempStartTime = ''\n      this.tempEndTime = ''\n      this.modal.show()\n    },\n    formatPeriod(period) {\n      return `${period.start} - ${period.end}`\n    },\n    removePeriod(index) {\n      const newValue = [...this.value]\n      newValue.splice(index, 1)\n      this.handleChange({\n        target: {\n          name: this.name,\n          value: newValue\n        }\n      })\n    },\n    addPeriod() {\n      if (this.tempStartTime && this.tempEndTime) {\n        const newPeriod = {\n          start: this.tempStartTime,\n          end: this.tempEndTime\n        }\n        const newValue = [...this.value, newPeriod]\n        this.handleChange({\n          target: {\n            name: this.name,\n            value: newValue\n          }\n        })\n        this.modal.hide()\n      }\n    }\n  }\n}\n</script>\n"],"mappings":";AA6DA,SAAAA,KAAA;AACA,OAAAC,mBAAA;AACA,OAAAC,kBAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAH,mBAAA;IACAC;EACA;EACAG,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;IACAN,IAAA;MACAI,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;IACAC,KAAA;MACAH,IAAA,EAAAI,KAAA;MACAF,QAAA;MACAG,OAAA,EAAAA,CAAA;IACA;IACAC,YAAA;MACAN,IAAA,EAAAO,QAAA;MACAL,QAAA;IACA;EACA;EACAM,KAAA;IACA;MACAC,aAAA;MACAC,WAAA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACAC,aAAA;MACA,UAAAV,KAAA,CAAAW,MAAA;MACA,YAAAX,KAAA,CAAAY,GAAA,CAAAC,MAAA,SAAAC,YAAA,CAAAD,MAAA,GAAAE,IAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAR,KAAA,OAAAlB,KAAA,CAAA2B,QAAA,CAAAC,cAAA;EACA;EACAC,OAAA;IACAC,iBAAA;MACA,KAAAd,aAAA;MACA,KAAAC,WAAA;MACA,KAAAC,KAAA,CAAAa,IAAA;IACA;IACAP,aAAAD,MAAA;MACA,UAAAA,MAAA,CAAAS,KAAA,MAAAT,MAAA,CAAAU,GAAA;IACA;IACAC,aAAAC,KAAA;MACA,MAAAC,QAAA,YAAA1B,KAAA;MACA0B,QAAA,CAAAC,MAAA,CAAAF,KAAA;MACA,KAAAtB,YAAA;QACAyB,MAAA;UACAnC,IAAA,OAAAA,IAAA;UACAO,KAAA,EAAA0B;QACA;MACA;IACA;IACAG,UAAA;MACA,SAAAvB,aAAA,SAAAC,WAAA;QACA,MAAAuB,SAAA;UACAR,KAAA,OAAAhB,aAAA;UACAiB,GAAA,OAAAhB;QACA;QACA,MAAAmB,QAAA,YAAA1B,KAAA,EAAA8B,SAAA;QACA,KAAA3B,YAAA;UACAyB,MAAA;YACAnC,IAAA,OAAAA,IAAA;YACAO,KAAA,EAAA0B;UACA;QACA;QACA,KAAAlB,KAAA,CAAAuB,IAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}