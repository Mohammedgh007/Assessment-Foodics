{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport ReservationSelectionTable from '../tables/ReservationSelectionTable.vue';\nimport FoodicsPrimaryBtn from '../ui/buttons/FoodicsPrimaryBtn.vue';\nimport FoodicsSecondaryBtn from '../ui/buttons/FoodicsSecondaryBtn.vue';\nimport PaginatorContainer from '../ui/containers/PaginatorContainer.vue';\nexport default {\n  name: 'AddBranchModal',\n  components: {\n    ReservationSelectionTable,\n    FoodicsPrimaryBtn,\n    FoodicsSecondaryBtn,\n    PaginatorContainer\n  },\n  props: {\n    modalId: {\n      type: String,\n      required: true\n    },\n    nonReservationsBranches: {\n      type: Array,\n      required: true,\n      default: () => []\n    },\n    pagesCount: {\n      type: Number,\n      required: true,\n      default: 10\n    },\n    /**\n     * @param {number} targetPage - The page number to get starting from 0\n     */\n    handleNavigateToPage: {\n      type: Function,\n      required: true\n    },\n    /**\n     * @param {Array<BranchOverviewModel>} branches - Array of branches to allow reservations\n     */\n    submitSelection: {\n      type: Function,\n      required: true\n    }\n  },\n  data() {\n    return {\n      selectedBranches: [],\n      currPage: 0,\n      // starts from 0,\n      isLoading: false\n    };\n  },\n  methods: {\n    async handleSubmit() {\n      this.isLoading = true;\n      await this.submitSelection(this.selectedBranches);\n      this.selectedBranches = [];\n      this.isLoading = false;\n    },\n    addBranch(branch) {\n      this.selectedBranches.push(branch);\n    },\n    removeBranch(branch) {\n      this.selectedBranches = this.selectedBranches.filter(b => b.reference !== branch.reference);\n    },\n    async handleClickPage(page) {\n      this.isLoading = true;\n      this.currPage = page;\n      await this.handleNavigateToPage(page);\n      this.isLoading = false;\n    }\n  }\n};","map":{"version":3,"names":["ReservationSelectionTable","FoodicsPrimaryBtn","FoodicsSecondaryBtn","PaginatorContainer","name","components","props","modalId","type","String","required","nonReservationsBranches","Array","default","pagesCount","Number","handleNavigateToPage","Function","submitSelection","data","selectedBranches","currPage","isLoading","methods","handleSubmit","addBranch","branch","push","removeBranch","filter","b","reference","handleClickPage","page"],"sources":["src/View/components/modalForms/AddBranchModal.vue"],"sourcesContent":["/**\n    This component is used to display a modal for adding a branch, so that the user can select \n    the branches they want to allow reservations for.\n*/\n<template>\n  <div class=\"modal fade\" :id=\"modalId\" tabindex=\"-1\" :aria-labelledby=\"`${modalId}Label`\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-size\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" :id=\"`${modalId}Label`\">{{ $t('addBranch') }}</h5>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"mb-3\">\n            <p> {{ $t('addBranchDescription') }} </p>\n            <ReservationSelectionTable \n              :branches=\"nonReservationsBranches\" \n              :addBranch=\"addBranch\"\n              :removeBranch=\"removeBranch\"\n            />\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <PaginatorContainer \n            :currPageIndex=\"currPage\"\n            :totalPages=\"pagesCount\"\n            :handleClickPage=\"handleClickPage\"\n          />\n          <div class=\"d-flex flex-column flex-md-row justify-content-end w-100 gap-2\">\n            <div class=\"col-sm-6 col-md-2\">\n              <FoodicsSecondaryBtn data-bs-dismiss=\"modal\" :onClick=\"() => {$emit('close')}\">{{ $t('close') }}</FoodicsSecondaryBtn>\n            </div>\n            <div class=\"col-sm-6 col-md-2\">\n              <FoodicsPrimaryBtn :onClick=\"handleSubmit\"> {{ $t('save') }} </FoodicsPrimaryBtn>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ReservationSelectionTable from '../tables/ReservationSelectionTable.vue'\nimport FoodicsPrimaryBtn from '../ui/buttons/FoodicsPrimaryBtn.vue';\nimport FoodicsSecondaryBtn from '../ui/buttons/FoodicsSecondaryBtn.vue';\nimport PaginatorContainer from '../ui/containers/PaginatorContainer.vue';\n\nexport default {\n  name: 'AddBranchModal',\n  components: {\n    ReservationSelectionTable,\n    FoodicsPrimaryBtn,\n    FoodicsSecondaryBtn,\n    PaginatorContainer\n  },\n  props: {\n    modalId: {\n      type: String,\n      required: true\n    },\n    nonReservationsBranches: {\n      type: Array,\n      required: true,\n      default: () => []\n    },\n    pagesCount: {\n      type: Number,\n      required: true,\n      default: 10\n    },\n    /**\n     * @param {number} targetPage - The page number to get starting from 0\n     */\n    handleNavigateToPage: {\n      type: Function,\n      required: true\n    },\n    /**\n     * @param {Array<BranchOverviewModel>} branches - Array of branches to allow reservations\n     */\n    submitSelection: {\n      type: Function,\n      required: true\n    }\n  },\n  data() {\n    return {\n      selectedBranches: [],\n      currPage: 0, // starts from 0,\n      isLoading: false\n    }\n  },\n  methods: {\n    async handleSubmit() {\n      this.isLoading = true\n      await this.submitSelection(this.selectedBranches)\n      this.selectedBranches = []\n      this.isLoading = false\n    },\n    addBranch(branch) {\n      this.selectedBranches.push(branch)\n    },\n    removeBranch(branch) {\n      this.selectedBranches = this.selectedBranches.filter(b => b.reference !== branch.reference)\n    },\n    async handleClickPage(page) {\n      this.isLoading = true\n      this.currPage = page\n      await this.handleNavigateToPage(page)\n      this.isLoading = false\n    }\n  }\n}\n</script>\n\n<style scoped>\n.modal-size {\n  width: 80vw;\n  min-width: 80vw;\n}\n\n@media (min-width: 768px) {\n  .modal-size {\n    width: 55vw;\n    min-width: 55vw;\n  }\n}\n.modal-header {\n  border-bottom: 1px solid #dee2e6;\n}\n\n.modal-footer {\n  border-top: 1px solid #dee2e6;\n}\n</style>\n"],"mappings":";;;AA2CA,OAAAA,yBAAA;AACA,OAAAC,iBAAA;AACA,OAAAC,mBAAA;AACA,OAAAC,kBAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAL,yBAAA;IACAC,iBAAA;IACAC,mBAAA;IACAC;EACA;EACAG,KAAA;IACAC,OAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;IACAC,uBAAA;MACAH,IAAA,EAAAI,KAAA;MACAF,QAAA;MACAG,OAAA,EAAAA,CAAA;IACA;IACAC,UAAA;MACAN,IAAA,EAAAO,MAAA;MACAL,QAAA;MACAG,OAAA;IACA;IACA;AACA;AACA;IACAG,oBAAA;MACAR,IAAA,EAAAS,QAAA;MACAP,QAAA;IACA;IACA;AACA;AACA;IACAQ,eAAA;MACAV,IAAA,EAAAS,QAAA;MACAP,QAAA;IACA;EACA;EACAS,KAAA;IACA;MACAC,gBAAA;MACAC,QAAA;MAAA;MACAC,SAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,aAAA;MACA,KAAAF,SAAA;MACA,WAAAJ,eAAA,MAAAE,gBAAA;MACA,KAAAA,gBAAA;MACA,KAAAE,SAAA;IACA;IACAG,UAAAC,MAAA;MACA,KAAAN,gBAAA,CAAAO,IAAA,CAAAD,MAAA;IACA;IACAE,aAAAF,MAAA;MACA,KAAAN,gBAAA,QAAAA,gBAAA,CAAAS,MAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAC,SAAA,KAAAL,MAAA,CAAAK,SAAA;IACA;IACA,MAAAC,gBAAAC,IAAA;MACA,KAAAX,SAAA;MACA,KAAAD,QAAA,GAAAY,IAAA;MACA,WAAAjB,oBAAA,CAAAiB,IAAA;MACA,KAAAX,SAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}