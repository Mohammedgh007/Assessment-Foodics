{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport BranchReservationsLayout from '@/View/layouts/BranchReservationsLayout.vue';\nimport BranchReservationsRepo from '@/infrastructure/foodicsAPI/BranchReservationsRepo';\nimport GetBranchesRequest from '@/infrastructure/foodicsAPI/dto/requests/GetBranchesRequest';\nimport AllowBranchReservationRequest from '@/infrastructure/foodicsAPI/dto/requests/AllowBranchReservationRequest';\nconst branchReservationsRepo = new BranchReservationsRepo();\nexport default {\n  name: 'BranchReservationsScreen',\n  components: {\n    BranchReservationsLayout\n  },\n  data() {\n    return {};\n  },\n  methods: {\n    async addReservations(branches) {\n      await Promise.all(branches.map(branch => {\n        const dto = new AllowBranchReservationRequest(branch.id);\n        return branchReservationsRepo.allowBranchReservation(dto);\n      }));\n    },\n    async removeReservations(branches) {\n      console.log(\"removeReservations\", branches);\n      await Promise.all(branches.map(branch => {\n        const dto = new DisAllowBranchReservationRequest(branch.id);\n        return branchReservationsRepo.removeBranchReservation(dto);\n      }));\n    },\n    async submitReservationSettings() {\n      // Submit reservation settings logic here  \n    },\n    /**\n     * @param {boolean} isReservationEnabled - Whether to get reservations or non-reservations\n     * @param {number} targetPage - The page number to get starting from 0\n     * @returns {Promise<{list: BranchOverviewModel[], pagesCount: number}>}\n     */\n    async getBranches(isReservationEnabled, targetPage) {\n      console.log(\"isReservationEnabled\", isReservationEnabled, targetPage);\n      const dto = new GetBranchesRequest(targetPage, isReservationEnabled);\n      const result = await branchReservationsRepo.getBranches(dto);\n      console.log(\"result SCR\", result);\n      // Get reservations logic here\n\n      return {\n        list: result.branches,\n        pagesCount: result.pagesCount\n      };\n    }\n  }\n};","map":{"version":3,"names":["BranchReservationsLayout","BranchReservationsRepo","GetBranchesRequest","AllowBranchReservationRequest","branchReservationsRepo","name","components","data","methods","addReservations","branches","Promise","all","map","branch","dto","id","allowBranchReservation","removeReservations","console","log","DisAllowBranchReservationRequest","removeBranchReservation","submitReservationSettings","getBranches","isReservationEnabled","targetPage","result","list","pagesCount"],"sources":["src/View/screens/BranchReservationsScreen.vue"],"sourcesContent":["\n\n<template>\n  <BranchReservationsLayout \n    :getBranches=\"getBranches\"\n    :addReservations=\"addReservations\"\n    :removeReservations=\"removeReservations\"\n    :submitReservationSettings=\"submitReservationSettings\"\n  />\n</template>\n\n<script>\nimport BranchReservationsLayout from '@/View/layouts/BranchReservationsLayout.vue';\nimport BranchReservationsRepo from '@/infrastructure/foodicsAPI/BranchReservationsRepo';\nimport GetBranchesRequest from '@/infrastructure/foodicsAPI/dto/requests/GetBranchesRequest';\nimport AllowBranchReservationRequest from '@/infrastructure/foodicsAPI/dto/requests/AllowBranchReservationRequest';\n\nconst branchReservationsRepo = new BranchReservationsRepo();\n\nexport default {\n  name: 'BranchReservationsScreen',\n  components: {\n    BranchReservationsLayout\n  },\n  data() {\n    return {\n    }\n  },\n  methods: {\n    async addReservations(branches) { \n      await Promise.all(branches.map(branch => {\n        const dto = new AllowBranchReservationRequest(branch.id)\n        return branchReservationsRepo.allowBranchReservation(dto)\n      }))\n    },\n    async removeReservations(branches) { console.log(\"removeReservations\", branches);\n      await Promise.all(branches.map(branch => {\n        const dto = new DisAllowBranchReservationRequest(branch.id)\n        return branchReservationsRepo.removeBranchReservation(dto)\n      }))\n    },\n    async submitReservationSettings() {\n      // Submit reservation settings logic here  \n    },\n    /**\n     * @param {boolean} isReservationEnabled - Whether to get reservations or non-reservations\n     * @param {number} targetPage - The page number to get starting from 0\n     * @returns {Promise<{list: BranchOverviewModel[], pagesCount: number}>}\n     */ \n    async getBranches(isReservationEnabled, targetPage) { console.log(\"isReservationEnabled\", isReservationEnabled, targetPage);\n      const dto = new GetBranchesRequest(targetPage, isReservationEnabled);\n      const result = await branchReservationsRepo.getBranches(dto);\n      console.log(\"result SCR\", result);\n      // Get reservations logic here\n      \n      return {list: result.branches, pagesCount: result.pagesCount}\n    }\n  }\n}\n</script>\n\n<style scoped>\n</style>\n"],"mappings":";AAYA,OAAAA,wBAAA;AACA,OAAAC,sBAAA;AACA,OAAAC,kBAAA;AACA,OAAAC,6BAAA;AAEA,MAAAC,sBAAA,OAAAH,sBAAA;AAEA;EACAI,IAAA;EACAC,UAAA;IACAN;EACA;EACAO,KAAA;IACA,QACA;EACA;EACAC,OAAA;IACA,MAAAC,gBAAAC,QAAA;MACA,MAAAC,OAAA,CAAAC,GAAA,CAAAF,QAAA,CAAAG,GAAA,CAAAC,MAAA;QACA,MAAAC,GAAA,OAAAZ,6BAAA,CAAAW,MAAA,CAAAE,EAAA;QACA,OAAAZ,sBAAA,CAAAa,sBAAA,CAAAF,GAAA;MACA;IACA;IACA,MAAAG,mBAAAR,QAAA;MAAAS,OAAA,CAAAC,GAAA,uBAAAV,QAAA;MACA,MAAAC,OAAA,CAAAC,GAAA,CAAAF,QAAA,CAAAG,GAAA,CAAAC,MAAA;QACA,MAAAC,GAAA,OAAAM,gCAAA,CAAAP,MAAA,CAAAE,EAAA;QACA,OAAAZ,sBAAA,CAAAkB,uBAAA,CAAAP,GAAA;MACA;IACA;IACA,MAAAQ,0BAAA;MACA;IAAA,CACA;IACA;AACA;AACA;AACA;AACA;IACA,MAAAC,YAAAC,oBAAA,EAAAC,UAAA;MAAAP,OAAA,CAAAC,GAAA,yBAAAK,oBAAA,EAAAC,UAAA;MACA,MAAAX,GAAA,OAAAb,kBAAA,CAAAwB,UAAA,EAAAD,oBAAA;MACA,MAAAE,MAAA,SAAAvB,sBAAA,CAAAoB,WAAA,CAAAT,GAAA;MACAI,OAAA,CAAAC,GAAA,eAAAO,MAAA;MACA;;MAEA;QAAAC,IAAA,EAAAD,MAAA,CAAAjB,QAAA;QAAAmB,UAAA,EAAAF,MAAA,CAAAE;MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}