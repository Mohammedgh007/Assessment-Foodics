{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { Dropdown } from 'bootstrap';\nexport default {\n  name: 'DropdownCheckboxesField',\n  props: {\n    label: {\n      type: String,\n      required: true\n    },\n    name: {\n      type: String,\n      required: true\n    },\n    /* Value is an array of indices of the options that are selected */\n    value: {\n      type: Array,\n      required: true\n    },\n    /* Options is an array of strings */\n    options: {\n      type: Array,\n      required: true\n    },\n    handleChange: {\n      type: Function,\n      required: true\n    }\n  },\n  methods: {\n    handleCheckboxChange(index) {\n      const newValue = [...this.value];\n      const indexInArray = newValue.indexOf(index);\n      if (indexInArray === -1) {\n        newValue.push(index);\n      } else {\n        newValue.splice(indexInArray, 1);\n      }\n      this.handleChange({\n        target: {\n          name: this.name,\n          value: newValue\n        }\n      });\n    },\n    closeDropdown() {\n      const dropdownButton = document.getElementById(this.name);\n      const dropdown = Dropdown.getInstance(dropdownButton);\n      if (dropdown) {\n        dropdown.hide();\n      }\n    }\n  }\n};","map":{"version":3,"names":["Dropdown","name","props","label","type","String","required","value","Array","options","handleChange","Function","methods","handleCheckboxChange","index","newValue","indexInArray","indexOf","push","splice","target","closeDropdown","dropdownButton","document","getElementById","dropdown","getInstance","hide"],"sources":["src/View/components/ui/fields/DropdownCheckboxesField.vue"],"sourcesContent":["<template>\n  <div class=\"form-group w-100\">\n    <label :for=\"name\" class=\"form-label\">{{ label }}</label>\n    <div class=\"dropdown w-100\">\n      <button \n        class=\"form-control text-start dropdown-toggle\" \n        type=\"button\" \n        :id=\"name\" \n        data-bs-toggle=\"dropdown\" \n        aria-expanded=\"false\"\n      >\n        {{ label }}\n      </button>\n      <div class=\"dropdown-menu w-100 p-2\">\n        <div class=\"form-check\" v-for=\"(option, index) in options\" :key=\"index\">\n          <input \n            class=\"form-check-input\" \n            type=\"checkbox\" \n            :id=\"`${name}-${index}`\"\n            :checked=\"value.includes(index)\"\n            @change=\"handleCheckboxChange(index)\"\n          >\n          <label class=\"form-check-label\" :for=\"`${name}-${index}`\">\n            {{ option }}\n          </label>\n        </div>\n        <div class=\"d-flex justify-content-end mt-2 border-top pt-2\">\n          <button \n            class=\"btn btn-primary btn-sm\" \n            @click=\"closeDropdown\"\n          >\n            OK\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Dropdown } from 'bootstrap'\n\nexport default {\n  name: 'DropdownCheckboxesField',\n  props: {\n    label: {\n      type: String,\n      required: true\n    },\n    name: {\n      type: String,\n      required: true\n    },\n    /* Value is an array of indices of the options that are selected */\n    value: {\n      type: Array,\n      required: true\n    },\n    /* Options is an array of strings */\n    options: {\n      type: Array,\n      required: true\n    },\n    handleChange: {\n      type: Function,\n      required: true\n    }\n  },\n  methods: {\n    handleCheckboxChange(index) {\n      const newValue = [...this.value]\n      const indexInArray = newValue.indexOf(index)\n      \n      if (indexInArray === -1) {\n        newValue.push(index)\n      } else {\n        newValue.splice(indexInArray, 1)\n      }\n\n      this.handleChange({\n        target: {\n          name: this.name,\n          value: newValue\n        }\n      })\n    },\n    closeDropdown() {\n      const dropdownButton = document.getElementById(this.name)\n      const dropdown = Dropdown.getInstance(dropdownButton)\n      if (dropdown) {\n        dropdown.hide()\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.dropdown-menu {\n  max-height: 300px;\n  overflow-y: auto;\n}\n</style>\n"],"mappings":";AAwCA,SAAAA,QAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;IACAL,IAAA;MACAG,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;IACA;IACAC,KAAA;MACAH,IAAA,EAAAI,KAAA;MACAF,QAAA;IACA;IACA;IACAG,OAAA;MACAL,IAAA,EAAAI,KAAA;MACAF,QAAA;IACA;IACAI,YAAA;MACAN,IAAA,EAAAO,QAAA;MACAL,QAAA;IACA;EACA;EACAM,OAAA;IACAC,qBAAAC,KAAA;MACA,MAAAC,QAAA,YAAAR,KAAA;MACA,MAAAS,YAAA,GAAAD,QAAA,CAAAE,OAAA,CAAAH,KAAA;MAEA,IAAAE,YAAA;QACAD,QAAA,CAAAG,IAAA,CAAAJ,KAAA;MACA;QACAC,QAAA,CAAAI,MAAA,CAAAH,YAAA;MACA;MAEA,KAAAN,YAAA;QACAU,MAAA;UACAnB,IAAA,OAAAA,IAAA;UACAM,KAAA,EAAAQ;QACA;MACA;IACA;IACAM,cAAA;MACA,MAAAC,cAAA,GAAAC,QAAA,CAAAC,cAAA,MAAAvB,IAAA;MACA,MAAAwB,QAAA,GAAAzB,QAAA,CAAA0B,WAAA,CAAAJ,cAAA;MACA,IAAAG,QAAA;QACAA,QAAA,CAAAE,IAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}