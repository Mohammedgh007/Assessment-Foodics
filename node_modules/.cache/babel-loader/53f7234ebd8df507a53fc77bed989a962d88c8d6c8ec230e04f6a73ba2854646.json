{"ast":null,"code":"import BranchReservationsLayout from '@/View/layouts/BranchReservationsLayout.vue';\nimport BranchOverviewModel from '@/business/models/BranchOverviewModel';\nimport BranchTableModal from '@/business/models/BranchTableModal';\nimport BranchReservationsRepo from '@/infrastructure/foodicsAPI/BranchReservationsRepo';\nimport GetBranchesRequest from '@/infrastructure/foodicsAPI/dto/requests/GetBranchesRequest';\nimport GetBranchesResponse from '@/infrastructure/foodicsAPI/dto/responses/GetBranchesResponse';\nconst branchReservationsRepo = new BranchReservationsRepo();\nexport default {\n  name: 'BranchReservationsScreen',\n  components: {\n    BranchReservationsLayout\n  },\n  data() {\n    return {};\n  },\n  methods: {\n    async addReservations() {\n      // Add reservation logic here\n    },\n    async submitReservationSettings() {\n      // Submit reservation settings logic here  \n    },\n    /**\n     * @param {boolean} isReservationEnabled - Whether to get reservations or non-reservations\n     * @param {number} targetPage - The page number to get starting from 0\n     * @returns {Promise<{list: BranchOverviewModel[], pagesCount: number}>}\n     */\n    async getBranches(isReservationEnabled, targetPage) {\n      const dto = new GetBranchesRequest(targetPage);\n      const result = await branchReservationsRepo.getBranches(dto);\n      console.log(result);\n      // Get reservations logic here\n      console.log(\"called in screen\", isReservationEnabled, targetPage);\n      const list = [new BranchOverviewModel('Branch 1', '123456', [new BranchTableModal('Section 1', 'Table 1'), new BranchTableModal('Section 1', 'Table 2')], 30, true), new BranchOverviewModel('Branch 2', '123457', [new BranchTableModal('Section 1', 'Table 1'), new BranchTableModal('Section 1', 'Table 2')], 31, true), new BranchOverviewModel('Branch 3', '123458', [new BranchTableModal('Section 1', 'Table 1'), new BranchTableModal('Section 1', 'Table 2')], 32, true), new BranchOverviewModel('Branch 4', '123459', [new BranchTableModal('Section 1', 'Table 1'), new BranchTableModal('Section 1', 'Table 2')], 33, true), new BranchOverviewModel('Branch 5', '123460', [new BranchTableModal('Section 1', 'Table 1'), new BranchTableModal('Section 1', 'Table 2')], 34, true)];\n      return {\n        list,\n        pagesCount: 10\n      };\n    }\n  }\n};","map":{"version":3,"names":["BranchReservationsLayout","BranchOverviewModel","BranchTableModal","BranchReservationsRepo","GetBranchesRequest","GetBranchesResponse","branchReservationsRepo","name","components","data","methods","addReservations","submitReservationSettings","getBranches","isReservationEnabled","targetPage","dto","result","console","log","list","pagesCount"],"sources":["src/View/screens/BranchReservationsScreen.vue"],"sourcesContent":["\n\n<template>\n  <BranchReservationsLayout \n    :getBranches=\"getBranches\"\n    :addReservations=\"addReservations\"\n    :submitReservationSettings=\"submitReservationSettings\"\n  />\n</template>\n\n<script>\nimport BranchReservationsLayout from '@/View/layouts/BranchReservationsLayout.vue';\nimport BranchOverviewModel from '@/business/models/BranchOverviewModel';\nimport BranchTableModal from '@/business/models/BranchTableModal';\nimport BranchReservationsRepo from '@/infrastructure/foodicsAPI/BranchReservationsRepo';\nimport GetBranchesRequest from '@/infrastructure/foodicsAPI/dto/requests/GetBranchesRequest';\nimport GetBranchesResponse from '@/infrastructure/foodicsAPI/dto/responses/GetBranchesResponse';\n\nconst branchReservationsRepo = new BranchReservationsRepo();\n\nexport default {\n  name: 'BranchReservationsScreen',\n  components: {\n    BranchReservationsLayout\n  },\n  data() {\n    return {\n    }\n  },\n  methods: {\n    async addReservations() {\n      // Add reservation logic here\n    },\n    async submitReservationSettings() {\n      // Submit reservation settings logic here  \n    },\n    /**\n     * @param {boolean} isReservationEnabled - Whether to get reservations or non-reservations\n     * @param {number} targetPage - The page number to get starting from 0\n     * @returns {Promise<{list: BranchOverviewModel[], pagesCount: number}>}\n     */ \n    async getBranches(isReservationEnabled, targetPage) {\n      const dto = new GetBranchesRequest(targetPage);\n      const result = await branchReservationsRepo.getBranches(dto);\n      console.log(result);\n      // Get reservations logic here\n      console.log(\"called in screen\", isReservationEnabled, targetPage)\n      const list = [\n        new BranchOverviewModel('Branch 1', '123456', [new BranchTableModal('Section 1', 'Table 1'), new BranchTableModal('Section 1', 'Table 2')], 30, true),\n        new BranchOverviewModel('Branch 2', '123457', [new BranchTableModal('Section 1', 'Table 1'), new BranchTableModal('Section 1', 'Table 2')], 31, true),\n        new BranchOverviewModel('Branch 3', '123458', [new BranchTableModal('Section 1', 'Table 1'), new BranchTableModal('Section 1', 'Table 2')], 32, true),\n        new BranchOverviewModel('Branch 4', '123459', [new BranchTableModal('Section 1', 'Table 1'), new BranchTableModal('Section 1', 'Table 2')], 33, true),\n        new BranchOverviewModel('Branch 5', '123460', [new BranchTableModal('Section 1', 'Table 1'), new BranchTableModal('Section 1', 'Table 2')], 34, true)\n      ]\n      return {list, pagesCount: 10}\n    }\n  }\n}\n</script>\n\n<style scoped>\n</style>\n"],"mappings":"AAWA,OAAAA,wBAAA;AACA,OAAAC,mBAAA;AACA,OAAAC,gBAAA;AACA,OAAAC,sBAAA;AACA,OAAAC,kBAAA;AACA,OAAAC,mBAAA;AAEA,MAAAC,sBAAA,OAAAH,sBAAA;AAEA;EACAI,IAAA;EACAC,UAAA;IACAR;EACA;EACAS,KAAA;IACA,QACA;EACA;EACAC,OAAA;IACA,MAAAC,gBAAA;MACA;IAAA,CACA;IACA,MAAAC,0BAAA;MACA;IAAA,CACA;IACA;AACA;AACA;AACA;AACA;IACA,MAAAC,YAAAC,oBAAA,EAAAC,UAAA;MACA,MAAAC,GAAA,OAAAZ,kBAAA,CAAAW,UAAA;MACA,MAAAE,MAAA,SAAAX,sBAAA,CAAAO,WAAA,CAAAG,GAAA;MACAE,OAAA,CAAAC,GAAA,CAAAF,MAAA;MACA;MACAC,OAAA,CAAAC,GAAA,qBAAAL,oBAAA,EAAAC,UAAA;MACA,MAAAK,IAAA,IACA,IAAAnB,mBAAA,4BAAAC,gBAAA,8BAAAA,gBAAA,sCACA,IAAAD,mBAAA,4BAAAC,gBAAA,8BAAAA,gBAAA,sCACA,IAAAD,mBAAA,4BAAAC,gBAAA,8BAAAA,gBAAA,sCACA,IAAAD,mBAAA,4BAAAC,gBAAA,8BAAAA,gBAAA,sCACA,IAAAD,mBAAA,4BAAAC,gBAAA,8BAAAA,gBAAA,qCACA;MACA;QAAAkB,IAAA;QAAAC,UAAA;MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}