{"ast":null,"code":"import _defineProperty from \"/Users/mohammedalghamdi/Desktop/personal/career/Foodics/tech assess/foodics-test/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport BranchOverviewModel from \"../../../business/models/BranchOverviewModel\";\nexport default class GetBranchesResponse {\n  constructor(jsonMap, doesAllowReservation) {\n    /**\n     * @type {Array<BranchOverviewModel>}\n     */\n    _defineProperty(this, \"branches\", void 0);\n    /**\n     * @type {number}\n     */\n    _defineProperty(this, \"pagesCount\", void 0);\n    this.branches = jsonMap.data.filter(branch => branch.accepts_reservations === doesAllowReservation).map(branch => this.mapToBranchOverviewModel(branch));\n    this.pagesCount = jsonMap.links.next != null ? 1 : 2; // branches do not include last page info in meta unlike what is specified in pagination section.\n  }\n  mapToBranchOverviewModel(jsonBranch) {\n    //const tables = jsonBranch.sections.map((section) => section.tables.map((table) => new BranchTableModal(section.name, table.name)));\n    const tables = [];\n    const reservationsSchedule = null;\n    return new BranchOverviewModel(jsonBranch.name, jsonBranch.reference, tables, jsonBranch.reservation_duration, jsonBranch.accepts_reservations, reservationsSchedule);\n  }\n}","map":{"version":3,"names":["BranchOverviewModel","GetBranchesResponse","constructor","jsonMap","doesAllowReservation","_defineProperty","branches","data","filter","branch","accepts_reservations","map","mapToBranchOverviewModel","pagesCount","links","next","jsonBranch","tables","reservationsSchedule","name","reference","reservation_duration"],"sources":["/Users/mohammedalghamdi/Desktop/personal/career/Foodics/tech assess/foodics-test/src/infrastructure/foodicsAPI/dto/responses/GetBranchesReponse.js"],"sourcesContent":["import BranchOverviewModel from \"../../../business/models/BranchOverviewModel\";\n\nexport default class GetBranchesResponse {\n\n    /**\n     * @type {Array<BranchOverviewModel>}\n     */\n    branches;\n\n    /**\n     * @type {number}\n     */\n    pagesCount;\n\n    constructor(jsonMap, doesAllowReservation){\n        this.branches = jsonMap.data.filter((branch) => branch.accepts_reservations === doesAllowReservation).map((branch) => this.mapToBranchOverviewModel(branch));\n        this.pagesCount = (jsonMap.links.next != null) \n            ? 1 \n            : 2; // branches do not include last page info in meta unlike what is specified in pagination section.\n    }\n\n    mapToBranchOverviewModel(jsonBranch){\n        //const tables = jsonBranch.sections.map((section) => section.tables.map((table) => new BranchTableModal(section.name, table.name)));\n        const tables = [];\n        const reservationsSchedule = null;\n        return new BranchOverviewModel(jsonBranch.name, jsonBranch.reference, tables, jsonBranch.reservation_duration, jsonBranch.accepts_reservations, reservationsSchedule);\n    }\n\n}\n"],"mappings":";;;;AAAA,OAAOA,mBAAmB,MAAM,8CAA8C;AAE9E,eAAe,MAAMC,mBAAmB,CAAC;EAYrCC,WAAWA,CAACC,OAAO,EAAEC,oBAAoB,EAAC;IAV1C;AACJ;AACA;IAFIC,eAAA;IAKA;AACJ;AACA;IAFIA,eAAA;IAMI,IAAI,CAACC,QAAQ,GAAGH,OAAO,CAACI,IAAI,CAACC,MAAM,CAAEC,MAAM,IAAKA,MAAM,CAACC,oBAAoB,KAAKN,oBAAoB,CAAC,CAACO,GAAG,CAAEF,MAAM,IAAK,IAAI,CAACG,wBAAwB,CAACH,MAAM,CAAC,CAAC;IAC5J,IAAI,CAACI,UAAU,GAAIV,OAAO,CAACW,KAAK,CAACC,IAAI,IAAI,IAAI,GACvC,CAAC,GACD,CAAC,CAAC,CAAC;EACb;EAEAH,wBAAwBA,CAACI,UAAU,EAAC;IAChC;IACA,MAAMC,MAAM,GAAG,EAAE;IACjB,MAAMC,oBAAoB,GAAG,IAAI;IACjC,OAAO,IAAIlB,mBAAmB,CAACgB,UAAU,CAACG,IAAI,EAAEH,UAAU,CAACI,SAAS,EAAEH,MAAM,EAAED,UAAU,CAACK,oBAAoB,EAAEL,UAAU,CAACN,oBAAoB,EAAEQ,oBAAoB,CAAC;EACzK;AAEJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}